<div class="articleContainer" id="<%= "article_#{ @article.id }" %>">
  <%= render 'articles/head' %>
  
  <div id="y2kArticle">
    <div class="warningLine"></div>
    <div class="date">
      <div class="warning">
        <p>23:59:59</p>
        <p>Dec 31 1999</p>
        <div class="blind"></div>
      </div>
      <div class="milenium">
        <p>00:00:01</p>
        <p>Jan 1 1900</p>
      </div>
    </div>
    <div class="text">
      <p>В 60-х возможности компьютеров были ограничены. Обработка упростила дело, но она также должна была абстрагироваться от некоторых сложностей и сохранять жизненно важные байты памяти там, где это возможно. Конструкторы COBOL приняли обдуманное, но недальновидное решение. Вместо того, чтобы представлять даты в четырехзначной записи (например, 1960), они будут отделять “19” и конвертировать все годы в две цифры (например, 60 ). Это может выглядеть как ненужная микро-оптимизацией, но в то время буквально каждый байт подсчитывался, а даты постоянно использовались в коде.</p>
      <p>Сорок лет спустя тысячелетие подходило к концу. Компьютеры под управлением таких языков, как COBOL столкнулись с довольно серьезной проблемой. На рубеже тысячелетий год будет регистрироваться как двойной ноль, 00, а не 2000 . Как правило, компьютеры не любят, когда вы даёте им ноль, когда они ожидают дату. Для некоторых систем этого было достаточно, чтобы вызвать сбой.</p>
      <p>Программисты, как минимум смышлёные из них, знали об этом с самого начала. В конце концов, проблема настигнет нас, как и всех. Но когда тысячелетие вступило в свое последнее десятилетие, большинство систем все еще были обременены старым кодом. Тем временем мир стал гораздо более зависимым от технологий, сетей и, конечно, Всемирной паутины. Банки, электростанции, электрические сети, фондовый рынок — все это зависело от сетевых компьютеров, большинство из которых работали на устаревшем коде COBOL. Тут действовал закон домино. Если только один из этих основных винтиков потерпит неудачу из-за Y2K, он может потащить все остальное вместе с ним. И эта теория даже не объясняла совершенно другую проблему со «встроенными системами», маленькими кусочками программного обеспечения, выполняющими старый код во всем, от бытовых микроволновых печей до медицинского оборудования, такого как кардиостимуляторы.</p>
      <div class="nameMeaning">Аббревиатура содержит букву Y обозначающую «год», и k как «kilo» — префикс в языке «Си», обозначающий 1000.</div>
      <p>Решение же оказалось довольно простым. Каждая строка кода должна была быть обновлена во всех кодах COBOL, один за другим, чтобы включить полную запись даты. Но просто не значит легко. Системы изначально взаимосвязаны. Таким образом, каждый бит потенциально опасного кода, во всем мире, должен быть обновлен до 2000 года. Тем не менее, согласованные усилия по исправлению Y2K в действительности не начались до второй половины 90-х годов.</p>
      <div class="timeCover"></div>
      <p>В ответ на эту огромную задачу небольшая группа людей в области технологий полностью потеряла голову. Они подняли панику, заявив, что не хватает времени, чтобы закончить работу, и распространили новость, что конец света действительно близок. Доска объявлений группы новостей, созданная осенью 1996 года для обсуждения потенциальных решений проблемы Y2K, быстро превратилась в информационно-пропагандистский совет survivalist. Пользователи публиковали свои планы как покинуть страну, запастись припасами и залечь на дно, чтобы переждать. Опытные программисты, десятилетиями работавшие в этой области, внезапно начали рассказывать прессе о своих новых планах по строительству жилья, заготовке припасов и выделке шкур медведей.</p>
      <p>Эта группа, а они даже не были большинством программистов, действовала как громоотвод для Всемирной истерии. Если компьютерщики были обеспокоены, пошла мысль, не должны ли мы тоже? Кто-нибудь сможет это исправить? Вскоре другие начали поддержали тенденцию к выживанию. В некоторых кругах конец света считался предопределённым.</p>
      <p>Когда часы наконец пробили полночь 1 января 2000 года, большинство людей даже не обратили внимания на Y2K. Те, кто укрылся в своих бункерах, вероятно, были первыми, кто узнал, что на самом деле почти ничего не произошло. Здесь сработала сигнализация, тут перестал работать билетный автомат. Но если не считать нескольких мелких и единичных инцидентов, все было просто прекрасно.</p>
      <p>По сей день мы понятия не имеем, были ли опасения в основном необоснованными с самого начала или совместные усилия, возглавляемые программистами по всему миру, предотвратили потенциальный ущерб. Мы можем никогда не узнать. Мы знаем, что худшего никогда не было. Правительства, корпорации и сетевые администраторы избежали катастрофы. И иногда, когда мы так сосредоточены на проблемах, которые мы считаем неизбежными, мы упускаем совершенно другой вид проблем.</p>
    </div>
    <div class="warningLine"></div>
  </div>
</div>
